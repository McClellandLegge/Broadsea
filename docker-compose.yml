version: '3.9'

volumes:
  atlasdb-postgres-data:
    name: atlasdb-postgres-data
  rstudio-home-data:
    name: rstudio-home-data
  rstudio-tmp-data:
    name: rstudio-tmp-data

services:
  
  traefik:
    image: docker.io/library/traefik:v2.9.4@sha256:4c388f477f5b7aa48420694d90db0ecb96b4ecede60b9b7589c87858abf87b60
    container_name: traefik
    restart: unless-stopped
    ipc: none
    read_only: true
    environment:
      BROADSEA_HOST: ${BROADSEA_HOST}
    labels:
     - "traefik.enable=true"
    ports:
      - "${BROADSEA_HOST}:80:80"
      - "${BROADSEA_HOST}:443:443"
    volumes:
      - ./traefik/traefik-${HTTP_TYPE}.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/config.yml:/etc/traefik/config.yml:ro
      - ./certs:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  broadsea-content:
    container_name: broadsea-content
    image: nginx
    restart: unless-stopped
    volumes:
      - ./broadsea-content:/usr/share/nginx/html/broadsea:ro
    labels:
      - "traefik.enable=true"

  broadsea-hades:
    container_name: broadsea-hades
    image: ohdsi/broadsea-hades:4.2.1
    environment:
      - USER=ohdsi
      - PASSWORD=mypass
    volumes:
      - rstudio-home-data:/home
      - rstudio-tmp-data:/tmp
    labels:
      - "traefik.enable=true"
    ports:
      - "8787:8787"
      - "6311:6311"

  ohdsi-atlas:
    container_name: ohdsi-atlas
    image: docker.io/ohdsi/atlas:latest
    restart: unless-stopped
    ipc: none
    privileged: false
    environment:
      WEBAPI_URL: "${HTTP_TYPE}://${BROADSEA_HOST}/WebAPI/"
    depends_on:
      - ohdsi-webapi
    labels:
      - "traefik.enable=true"

  ohdsi-webapi:
    container_name: ohdsi-webapi
    image: docker.io/ohdsi/webapi:latest
    restart: unless-stopped
    ipc: none
    read_only: true
    tmpfs:
      - /tmp
    privileged: false
    environment:
      DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      DATASOURCE_URL: jdbc:postgresql://broadsea-atlasdb:5432/postgres
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: mypass
      DATASOURCE_OHDSI_SCHEMA: webapi
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: webapi
      SPRING_BATCH_REPOSITORY_TABLEPREFIX: webapi.BATCH_
      FLYWAY_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      FLYWAY_DATASOURCE_URL: jdbc:postgresql://broadsea-atlasdb:5432/postgres
      FLYWAY_DATASOURCE_USERNAME: postgres
      FLYWAY_DATASOURCE_PASSWORD: postgres
      FLYWAY_LOCATIONS: classpath:db/migration/postgresql
      FLYWAY_PLACEHOLDERS_OHDSISCHEMA: webapi
      FLYWAY_SCHEMAS: webapi
      FLYWAY_BASELINEONMIGRATE: "true"
      FLYWAY_TABLE: schema_history
      flyway_baselineVersionAsString: "2.2.5.20180212152023"  # this env var is case sensitive
      FLYWAY_BASELINEDESCRIPTION: Base Migration
      SECURITY_CORS_ENABLED: "true"
      SECURITY_ORIGIN: "${HTTP_TYPE}://${BROADSEA_HOST}"
      SOLR_ENDPOINT: http://broadsea-solr:8983/solr
    depends_on:
      - broadsea-atlasdb
    labels:
      - "traefik.enable=true"

  broadsea-atlasdb:
    image: ohdsi/broadsea-atlasdb:2.0.0
    container_name: broadsea-atlasdb
    cpus: 2
    mem_limit: "2G"
    environment:
      - POSTGRES_PASSWORD=mypass
    ports:
      - "5432:5432"
    volumes:
     - atlasdb-postgres-data:/var/lib/postgresql/data
     - ./100_populate_source_source_daimon.sql:/docker-entrypoint-initdb.d/100_populate_source_source_daimon.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  broadsea-solr:
    profiles: ["solr-no-import", "solr-with-import"]
    container_name: solr
    image: solr:8.11.1
    environment: 
      SOLR_OPTS: 
        -DVOCAB_VERSION=${VOCAB_VERSION}
        -DVOCAB_JDBC_DRIVER_PATH=${VOCAB_JDBC_DRIVER_PATH}
        -DVOCAB_JDBC_URL=${VOCAB_JDBC_URL}
        -DVOCAB_JDBC_USER=${VOCAB_JDBC_USER}
        -DVOCAB_JDBC_PASSWORD=${VOCAB_JDBC_PASSWORD}
    volumes:
      - ./${VOCAB_JDBC_FILE_NAME}:/opt/solr-8.11.1/server/lib/${VOCAB_JDBC_FILE_NAME}:ro
      - ./solr:/tmp/solr_config:ro
    ports:
      - "8983:8983"
    labels:
      - "traefik.enable=true"
    command:
      - solr-precreate
      - ${VOCAB_VERSION}
      - /tmp/solr_config
    healthcheck:
      test: curl --fail http://${BROADSEA_HOST}:8983 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  broadsea-solr-run-import:
    profiles: ["solr-with-import"]
    container_name: solr-run-import
    image: curlimages/curl
    depends_on:
      broadsea-solr:
        condition: service_healthy
    command: curl -d "vocab_database_schema=${VOCAB_DATABASE_SCHEMA}" -X POST http://broadsea-solr:8983/solr/${VOCAB_VERSION}/dataimport?command=full-import&entity=concept
